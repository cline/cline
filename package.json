{
	"name": "ponder-writing-assistant",
	"displayName": "Ponder",
	"description": "AI-powered writing assistant for creative writing, content creation, and literary composition. Transform VS Code into your creative writing studio with comprehensive writing support.",
	"version": "3.20.2",
	"icon": "assets/icons/icon.png",
	"engines": {
		"vscode": "^1.84.0"
	},
	"author": {
		"name": "Ponder Project"
	},
	"license": "Apache-2.0",
	"publisher": "saoudrizwan",
	"repository": {
		"type": "git",
		"url": "https://github.com/leuoson/ponder"
	},
	"homepage": "https://github.com/leuoson/ponder",
	"categories": [
		"AI",
		"Chat",
		"Education",
		"Other",
		"Snippets",
		"Formatters"
	],
	"keywords": [
		"ponder",
		"writing",
		"creative-writing",
		"content-creation",
		"literary",
		"ai-writing",
		"writing-assistant",
		"claude",
		"mcp",
		"openrouter",
		"agent",
		"autonomous",
		"chatgpt",
		"sonnet",
		"ai",
		"llama",
		"novel",
		"screenplay",
		"poetry",
		"blog",
		"copywriting",
		"editing"
	],
	"activationEvents": [
		"onLanguage",
		"onStartupFinished",
		"workspaceContains:evals.env"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"walkthroughs": [
			{
				"id": "ClineWalkthrough",
				"title": "Meet Cline, your new coding partner",
				"description": "Cline codes like a developer because it thinks like one. Here are 5 ways to put it to work:",
				"steps": [
					{
						"id": "welcome",
						"title": "Start with a Goal, Not Just a Prompt",
						"description": "Tell Cline what you want to achieve. It plans, asks, and then codes, like a true partner.",
						"media": {
							"markdown": "walkthrough/step1.md"
						}
					},
					{
						"id": "learn",
						"title": "Let Cline Learn Your Codebase",
						"description": "Point Cline to your project. It builds understanding to make smart, context-aware changes.",
						"media": {
							"markdown": "walkthrough/step2.md"
						}
					},
					{
						"id": "advanced-features",
						"title": "Always Use the Best AI Models",
						"description": "Cline empowers you with State-of-the-Art AI, connecting to top models (Anthropic, Gemini, OpenAI & more).",
						"media": {
							"markdown": "walkthrough/step3.md"
						}
					},
					{
						"id": "mcp",
						"title": "Extend with Powerful Tools (MCP)",
						"description": "Connect to databases, APIs, or discover new capabilities in the MCP Marketplace.",
						"media": {
							"markdown": "walkthrough/step4.md"
						}
					},
					{
						"id": "getting-started",
						"title": "You're Always in Control",
						"description": "Review Cline's plans and diffs. Approve changes before they happen. No surprises.",
						"media": {
							"markdown": "walkthrough/step5.md"
						},
						"content": {
							"path": "walkthrough/step5.md"
						}
					}
				]
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "ponder-ActivityBar",
					"title": "Ponder (âŒ˜+')",
					"icon": "assets/icons/icon.svg",
					"when": "isMac"
				},
				{
					"id": "ponder-ActivityBar",
					"title": "Ponder (Ctrl+')",
					"icon": "assets/icons/icon.svg",
					"when": "!isMac"
				}
			]
		},
		"views": {
			"ponder-ActivityBar": [
				{
					"type": "webview",
					"id": "ponder.SidebarProvider",
					"name": ""
				}
			]
		},
		"commands": [
			{
				"command": "ponder.plusButtonClicked",
				"title": "New Task",
				"icon": "$(add)"
			},
			{
				"command": "ponder.mcpButtonClicked",
				"title": "MCP Servers",
				"icon": "$(server)"
			},
			{
				"command": "ponder.historyButtonClicked",
				"title": "History",
				"icon": "$(history)"
			},
			{
				"command": "ponder.popoutButtonClicked",
				"title": "Open in Editor",
				"icon": "$(link-external)"
			},
			{
				"command": "ponder.accountButtonClicked",
				"title": "Account",
				"icon": "$(account)"
			},
			{
				"command": "ponder.settingsButtonClicked",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "ponder.openInNewTab",
				"title": "Open In New Tab",
				"category": "Ponder"
			},
			{
				"command": "ponder.dev.createTestTasks",
				"title": "Create Test Tasks",
				"category": "Ponder",
				"when": "ponder.isDevMode"
			},
			{
				"command": "ponder.addToChat",
				"title": "Add to Ponder",
				"category": "Ponder"
			},
			{
				"command": "ponder.addTerminalOutputToChat",
				"title": "Add to Ponder",
				"category": "Ponder"
			},
			{
				"command": "ponder.focusChatInput",
				"title": "Jump to Chat Input",
				"category": "Ponder"
			},
			{
				"command": "ponder.generateGitCommitMessage",
				"title": "Generate Commit Message with Ponder",
				"category": "Ponder",
				"icon": "$(robot)"
			},
			{
				"command": "ponder.abortGitCommitMessage",
				"title": "Generate Commit Message with Ponder - Stop",
				"category": "Ponder",
				"icon": "$(debug-stop)"
			},
			{
				"command": "ponder.explainCode",
				"title": "Explain with Ponder",
				"category": "Ponder"
			},
			{
				"command": "ponder.improveCode",
				"title": "Improve with Ponder",
				"category": "Ponder"
			},
			{
				"command": "ponder.openWalkthrough",
				"title": "Open Walkthrough",
				"category": "Ponder"
			}
		],
		"keybindings": [
			{
				"command": "ponder.addToChat",
				"key": "cmd+'",
				"mac": "cmd+'",
				"win": "ctrl+'",
				"linux": "ctrl+'",
				"when": "editorHasSelection"
			},
			{
				"command": "ponder.generateGitCommitMessage",
				"when": "config.git.enabled && scmProvider == git"
			},
			{
				"command": "ponder.focusChatInput",
				"key": "cmd+'",
				"mac": "cmd+'",
				"win": "ctrl+'",
				"linux": "ctrl+'",
				"when": "!editorHasSelection"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "ponder.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == ponder.SidebarProvider"
				},
				{
					"command": "ponder.mcpButtonClicked",
					"group": "navigation@2",
					"when": "view == ponder.SidebarProvider"
				},
				{
					"command": "ponder.historyButtonClicked",
					"group": "navigation@3",
					"when": "view == ponder.SidebarProvider"
				},
				{
					"command": "ponder.popoutButtonClicked",
					"group": "navigation@4",
					"when": "view == ponder.SidebarProvider"
				},
				{
					"command": "ponder.accountButtonClicked",
					"group": "navigation@5",
					"when": "view == ponder.SidebarProvider"
				},
				{
					"command": "ponder.settingsButtonClicked",
					"group": "navigation@6",
					"when": "view == ponder.SidebarProvider"
				}
			],
			"editor/title": [
				{
					"command": "ponder.plusButtonClicked",
					"group": "navigation@1",
					"when": "activeWebviewPanelId == ponder.TabPanelProvider"
				},
				{
					"command": "ponder.mcpButtonClicked",
					"group": "navigation@2",
					"when": "activeWebviewPanelId == ponder.TabPanelProvider"
				},
				{
					"command": "ponder.historyButtonClicked",
					"group": "navigation@3",
					"when": "activeWebviewPanelId == ponder.TabPanelProvider"
				},
				{
					"command": "ponder.popoutButtonClicked",
					"group": "navigation@4",
					"when": "activeWebviewPanelId == ponder.TabPanelProvider"
				},
				{
					"command": "ponder.accountButtonClicked",
					"group": "navigation@5",
					"when": "activeWebviewPanelId == ponder.TabPanelProvider"
				},
				{
					"command": "ponder.settingsButtonClicked",
					"group": "navigation@6",
					"when": "activeWebviewPanelId == ponder.TabPanelProvider"
				}
			],
			"editor/context": [
				{
					"command": "ponder.addToChat",
					"group": "navigation",
					"when": "editorHasSelection"
				}
			],
			"terminal/context": [
				{
					"command": "ponder.addTerminalOutputToChat",
					"group": "navigation"
				}
			],
			"scm/title": [
				{
					"command": "ponder.generateGitCommitMessage",
					"group": "navigation",
					"when": "config.git.enabled && scmProvider == git && !ponder.isGeneratingCommit"
				},
				{
					"command": "ponder.abortGitCommitMessage",
					"group": "navigation",
					"when": "config.git.enabled && scmProvider == git && ponder.isGeneratingCommit"
				}
			],
			"commandPalette": [
				{
					"command": "ponder.generateGitCommitMessage",
					"when": "config.git.enabled && scmProvider == git && !ponder.isGeneratingCommit"
				},
				{
					"command": "ponder.abortGitCommitMessage",
					"when": "config.git.enabled && scmProvider == git && ponder.isGeneratingCommit"
				}
			]
		},
		"configuration": {
			"title": "Ponder",
			"properties": {}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "npm run check-types && npm run lint && node esbuild.mjs",
		"compile-standalone": "npm run check-types && npm run lint && node esbuild.mjs --standalone",
		"postcompile-standalone": "node scripts/package-standalone.mjs",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.mjs --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "npm run check-types && npm run build:webview && npm run lint && node esbuild.mjs --production",
		"protos": "node scripts/build-proto.mjs",
		"postprotos": "prettier src/shared/proto src/core/controller src/hosts/ webview-ui/src/services src/generated --write --log-level warn",
		"clean": "rimraf dist dist-standalone webview-ui/build src/generated out/",
		"compile-tests": "node ./scripts/build-tests.js",
		"watch-tests": "tsc -p . -w --outDir out",
		"check-types": "npm run protos && npx tsc --noEmit && cd webview-ui && npx tsc -b --noEmit",
		"lint": "eslint src --ext ts && eslint webview-ui/src --ext ts && buf lint && cd webview-ui && npm run lint",
		"format": "prettier . --check",
		"format:fix": "prettier . --write",
		"pretest": "npm run compile && npm run compile-tests && npm run compile-standalone && npm run lint",
		"test": "npm-run-all test:unit test:integration",
		"test:ci": "node scripts/test-ci.js",
		"test:integration": "vscode-test",
		"test:unit": "TS_NODE_PROJECT='./tsconfig.unit-test.json' mocha",
		"test:coverage": "vscode-test --coverage",
		"e2e": "playwright test -c playwright.config.ts",
		"test:e2e": "playwright install && vsce package --no-dependencies --out dist/e2e.vsix && node src/test/e2e/utils/build.js && playwright test",
		"test:e2e:optimal": "vsce package --no-dependencies --out dist/e2e.vsix && node src/test/e2e/utils/build.js && playwright test",
		"install:all": "npm install && cd webview-ui && npm install",
		"dev:webview": "cd webview-ui && npm run dev",
		"build:webview": "cd webview-ui && npm run build",
		"test:webview": "cd webview-ui && npm run test",
		"publish:marketplace": "vsce publish && ovsx publish",
		"publish:marketplace:prerelease": "vsce publish --pre-release && ovsx publish --pre-release",
		"prepare": "husky",
		"changeset": "changeset",
		"version-packages": "changeset version",
		"docs": "cd docs && npm run dev",
		"docs:check-links": "cd docs && npm run check",
		"docs:rename-file": "cd docs && npm run rename",
		"report-issue": "node scripts/report-issue.js"
	},
	"lint-staged": {
		"*": [
			"prettier --write --ignore-unknown --log-level=log"
		]
	},
	"devDependencies": {
		"@bufbuild/buf": "^1.54.0",
		"@changesets/cli": "^2.27.12",
		"@types/chai": "^5.0.1",
		"@types/clone-deep": "^4.0.4",
		"@types/diff": "^5.2.1",
		"@types/get-folder-size": "^3.0.4",
		"@types/mocha": "^10.0.7",
		"@types/node": "20.x",
		"@types/pdf-parse": "^1.1.4",
		"@types/proxyquire": "^1.3.31",
		"@types/should": "^11.2.0",
		"@types/sinon": "^17.0.4",
		"@types/turndown": "^5.0.5",
		"@types/vscode": "^1.84.0",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.18.0",
		"@typescript-eslint/utils": "^8.33.0",
		"@vscode/test-cli": "^0.0.10",
		"@vscode/test-electron": "^2.5.2",
		"@vscode/vsce": "^3.6.0",
		"chai": "^4.3.10",
		"chalk": "^5.3.0",
		"esbuild": "^0.25.0",
		"eslint": "^8.57.0",
		"eslint-plugin-eslint-rules": "file:eslint-rules",
		"grpc-tools": "^1.13.0",
		"husky": "^9.1.7",
		"lint-staged": "^16.1.0",
		"minimatch": "^3.0.3",
		"npm-run-all": "^4.1.5",
		"prettier": "^3.3.3",
		"protoc-gen-ts": "^0.8.7",
		"proxyquire": "^2.1.3",
		"rimraf": "^6.0.1",
		"should": "^13.2.3",
		"sinon": "^19.0.2",
		"ts-node": "^10.9.2",
		"ts-proto": "^2.6.1",
		"tsconfig-paths": "^4.2.0",
		"typescript": "^5.4.5"
	},
	"dependencies": {
		"@anthropic-ai/sdk": "^0.37.0",
		"@anthropic-ai/vertex-sdk": "^0.6.4",
		"@aws-sdk/client-bedrock-runtime": "^3.840.0",
		"@aws-sdk/credential-providers": "^3.840.0",
		"@bufbuild/protobuf": "^2.2.5",
		"@cerebras/cerebras_cloud_sdk": "^1.35.0",
		"@google-cloud/vertexai": "^1.9.3",
		"@google/genai": "1.0.0",
		"@grpc/grpc-js": "^1.9.15",
		"@grpc/reflection": "^1.0.4",
		"@mistralai/mistralai": "^1.5.0",
		"@modelcontextprotocol/sdk": "^1.11.1",
		"@opentelemetry/api": "^1.4.1",
		"@opentelemetry/exporter-trace-otlp-http": "^0.39.1",
		"@opentelemetry/resources": "^1.30.1",
		"@opentelemetry/sdk-node": "^0.39.1",
		"@opentelemetry/sdk-trace-node": "^1.30.1",
		"@opentelemetry/semantic-conventions": "^1.30.0",
		"@playwright/test": "^1.53.2",
		"@sentry/browser": "^9.12.0",
		"@streamparser/json": "^0.0.22",
		"@vscode/codicons": "^0.0.36",
		"archiver": "^7.0.1",
		"axios": "^1.8.2",
		"cheerio": "^1.0.0",
		"chokidar": "^4.0.1",
		"chrome-launcher": "^1.1.2",
		"clone-deep": "^4.0.1",
		"default-shell": "^2.2.0",
		"diff": "^5.2.0",
		"exceljs": "^4.4.0",
		"execa": "^9.5.2",
		"fast-deep-equal": "^3.1.3",
		"firebase": "^11.2.0",
		"fzf": "^0.5.2",
		"get-folder-size": "^5.0.0",
		"globby": "^14.0.2",
		"grpc-health-check": "^2.0.2",
		"iconv-lite": "^0.6.3",
		"ignore": "^7.0.3",
		"image-size": "^2.0.2",
		"isbinaryfile": "^5.0.2",
		"jschardet": "^3.1.4",
		"jwt-decode": "^4.0.0",
		"mammoth": "^1.8.0",
		"monaco-vscode-textmate-theme-converter": "^0.1.7",
		"nice-grpc": "^2.1.12",
		"ollama": "^0.5.13",
		"open": "^10.1.2",
		"open-graph-scraper": "^6.9.0",
		"openai": "^4.83.0",
		"os-name": "^6.0.0",
		"p-timeout": "^6.1.4",
		"p-wait-for": "^5.0.2",
		"pdf-parse": "^1.1.1",
		"posthog-node": "^4.8.1",
		"puppeteer-chromium-resolver": "^23.0.0",
		"puppeteer-core": "^23.4.0",
		"reconnecting-eventsource": "^1.6.4",
		"serialize-error": "^11.0.3",
		"simple-git": "^3.27.0",
		"strip-ansi": "^7.1.0",
		"tree-sitter-wasms": "^0.1.11",
		"ts-morph": "^25.0.1",
		"turndown": "^7.2.0",
		"vscode-uri": "^3.1.0",
		"web-tree-sitter": "^0.22.6",
		"zod": "^3.24.2"
	}
}
