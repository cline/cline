{
	"name": "gline",
	"displayName": "Gline",
	"description": "Autonomous coding agent right in your IDE, capable of creating/editing files, running commands, using the browser, and more with your permission every step of the way.",
	"version": "3.13.1",
	"icon": "assets/icons/icon.png",
	"engines": {
		"vscode": "^1.84.0"
	},
	"author": {
		"name": "Gline"
	},
	"license": "Apache-2.0",
	"publisher": "saoudrizwan",
	"repository": {
		"type": "git",
		"url": "https://github.com/eomcaleb/gline"
	},
	"homepage": "https://gline.bot",
	"categories": [
		"AI",
		"Chat",
		"Programming Languages",
		"Education",
		"Snippets",
		"Testing"
	],
	"keywords": [
		"gline",
		"claude",
		"dev",
		"mcp",
		"openrouter",
		"coding",
		"agent",
		"autonomous",
		"chatgpt",
		"sonnet",
		"ai",
		"llama"
	],
	"activationEvents": [
		"workspaceContains:evals.env"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"viewsContainers": {
			"activitybar": [
				{
					"id": "gline-ActivityBar",
					"title": "Gline",
					"icon": "assets/icons/icon.svg"
				}
			]
		},
		"views": {
			"gline-ActivityBar": [
				{
					"type": "webview",
					"id": "gline.SidebarProvider",
					"name": ""
				}
			]
		},
		"commands": [
			{
				"command": "gline.plusButtonClicked",
				"title": "New Task",
				"icon": "$(add)"
			},
			{
				"command": "gline.mcpButtonClicked",
				"title": "MCP Servers",
				"icon": "$(server)"
			},
			{
				"command": "gline.historyButtonClicked",
				"title": "History",
				"icon": "$(history)"
			},
			{
				"command": "gline.popoutButtonClicked",
				"title": "Open in Editor",
				"icon": "$(link-external)"
			},
			{
				"command": "gline.accountButtonClicked",
				"title": "Account",
				"icon": "$(account)"
			},
			{
				"command": "gline.settingsButtonClicked",
				"title": "Settings",
				"icon": "$(settings-gear)"
			},
			{
				"command": "gline.openInNewTab",
				"title": "Open In New Tab",
				"category": "Gline"
			},
			{
				"command": "gline.dev.createTestTasks",
				"title": "Create Test Tasks",
				"category": "Gline",
				"when": "gline.isDevMode"
			},
			{
				"command": "gline.addToChat",
				"title": "Add to Gline",
				"category": "Gline"
			},
			{
				"command": "gline.addTerminalOutputToChat",
				"title": "Add to Gline",
				"category": "Gline"
			},
			{
				"command": "gline.focusChatInput",
				"title": "Jump to Chat Input",
				"category": "Gline"
			}
		],
		"keybindings": [
			{
				"command": "gline.addToChat",
				"key": "cmd+'",
				"mac": "cmd+'",
				"win": "ctrl+'",
				"linux": "ctrl+'",
				"when": "editorHasSelection"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "gline.plusButtonClicked",
					"group": "navigation@1",
					"when": "view == gline.SidebarProvider"
				},
				{
					"command": "gline.mcpButtonClicked",
					"group": "navigation@2",
					"when": "view == gline.SidebarProvider"
				},
				{
					"command": "gline.historyButtonClicked",
					"group": "navigation@3",
					"when": "view == gline.SidebarProvider"
				},
				{
					"command": "gline.popoutButtonClicked",
					"group": "navigation@4",
					"when": "view == gline.SidebarProvider"
				},
				{
					"command": "gline.accountButtonClicked",
					"group": "navigation@5",
					"when": "view == gline.SidebarProvider"
				},
				{
					"command": "gline.settingsButtonClicked",
					"group": "navigation@6",
					"when": "view == gline.SidebarProvider"
				}
			],
			"editor/title": [
				{
					"command": "gline.plusButtonClicked",
					"group": "navigation@1",
					"when": "activeWebviewPanelId == gline.TabPanelProvider"
				},
				{
					"command": "gline.mcpButtonClicked",
					"group": "navigation@2",
					"when": "activeWebviewPanelId == gline.TabPanelProvider"
				},
				{
					"command": "gline.historyButtonClicked",
					"group": "navigation@3",
					"when": "activeWebviewPanelId == gline.TabPanelProvider"
				},
				{
					"command": "gline.popoutButtonClicked",
					"group": "navigation@4",
					"when": "activeWebviewPanelId == gline.TabPanelProvider"
				},
				{
					"command": "gline.accountButtonClicked",
					"group": "navigation@5",
					"when": "activeWebviewPanelId == gline.TabPanelProvider"
				},
				{
					"command": "gline.settingsButtonClicked",
					"group": "navigation@6",
					"when": "activeWebviewPanelId == gline.TabPanelProvider"
				}
			],
			"editor/context": [
				{
					"command": "gline.addToChat",
					"group": "navigation",
					"when": "editorHasSelection"
				}
			],
			"terminal/context": [
				{
					"command": "gline.addTerminalOutputToChat",
					"group": "navigation"
				}
			]
		},
		"configuration": {
			"title": "Gline",
			"properties": {
				"gline.vsCodeLmModelSelector": {
					"type": "object",
					"properties": {
						"vendor": {
							"type": "string",
							"description": "The vendor of the language model (e.g. copilot)"
						},
						"family": {
							"type": "string",
							"description": "The family of the language model (e.g. gpt-4)"
						}
					},
					"description": "Settings for VSCode Language Model API"
				},
				"gline.enableCheckpoints": {
					"type": "boolean",
					"default": true,
					"description": "Enables extension to save checkpoints of workspace throughout the task. Uses git under the hood which may not work well with large workspaces."
				},
				"gline.disableBrowserTool": {
					"type": "boolean",
					"default": false,
					"description": "Disables extension from spawning browser session."
				},
				"gline.modelSettings.o3Mini.reasoningEffort": {
					"type": "string",
					"enum": [
						"low",
						"medium",
						"high"
					],
					"default": "medium",
					"description": "Controls the reasoning effort when using the o3-mini model. Higher values may result in more thorough but slower responses."
				},
				"gline.chromeExecutablePath": {
					"type": "string",
					"default": null,
					"description": "Path to Chrome executable for browser use functionality. If not set, the extension will attempt to find or download it automatically."
				},
				"gline.preferredLanguage": {
					"type": "string",
					"enum": [
						"English",
						"Arabic - العربية",
						"Portuguese - Português (Brasil)",
						"Czech - Čeština",
						"French - Français",
						"German - Deutsch",
						"Hindi - हिन्दी",
						"Hungarian - Magyar",
						"Italian - Italiano",
						"Japanese - 日本語",
						"Korean - 한국어",
						"Polish - Polski",
						"Portuguese - Português (Portugal)",
						"Russian - Русский",
						"Simplified Chinese - 简体中文",
						"Spanish - Español",
						"Traditional Chinese - 繁體中文",
						"Turkish - Türkçe"
					],
					"default": "English",
					"description": "The language that gline should use for communication."
				},
				"gline.mcpMarketplace.enabled": {
					"type": "boolean",
					"default": true,
					"description": "Controls whether the MCP Marketplace is enabled."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "npm run check-types && npm run lint && node esbuild.js",
		"watch": "npm-run-all -p watch:*",
		"watch:esbuild": "node esbuild.js --watch",
		"watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
		"package": "npm run build:webview && npm run check-types && npm run lint && node esbuild.js --production",
		"protos": "node proto/build-proto.js && prettier src/shared/proto --write && prettier src/core/controller --write",
		"compile-tests": "tsc -p ./tsconfig.test.json --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"check-types": "tsc --noEmit",
		"lint": "eslint src --ext ts && eslint webview-ui/src --ext ts",
		"format": "prettier . --check",
		"format:fix": "prettier . --write",
		"test": "npm-run-all test:unit test:integration",
		"test:ci": "node scripts/test-ci.js",
		"test:integration": "vscode-test",
		"test:unit": "TS_NODE_PROJECT='./tsconfig.unit-test.json' mocha",
		"test:coverage": "vscode-test --coverage",
		"install:all": "npm install && cd webview-ui && npm install",
		"dev:webview": "cd webview-ui && npm run dev",
		"build:webview": "cd webview-ui && npm run build",
		"test:webview": "cd webview-ui && npm run test",
		"publish:marketplace": "vsce publish && ovsx publish",
		"publish:marketplace:prerelease": "vsce publish --pre-release && ovsx publish --pre-release",
		"prepare": "husky",
		"changeset": "changeset",
		"version-packages": "changeset version"
	},
	"devDependencies": {
		"@changesets/cli": "^2.27.12",
		"@tailwindcss/vite": "^4.1.4",
		"@types/chai": "^5.0.1",
		"@types/clone-deep": "^4.0.4",
		"@types/diff": "^5.2.1",
		"@types/get-folder-size": "^3.0.4",
		"@types/mocha": "^10.0.7",
		"@types/node": "^20.17.30",
		"@types/pdf-parse": "^1.1.4",
		"@types/proxyquire": "^1.3.31",
		"@types/should": "^11.2.0",
		"@types/sinon": "^17.0.4",
		"@types/testing-library__jest-dom": "^5.14.9",
		"@types/turndown": "^5.0.5",
		"@types/vscode": "^1.84.0",
		"@typescript-eslint/eslint-plugin": "^7.14.1",
		"@typescript-eslint/parser": "^7.11.0",
		"@vitejs/plugin-react-swc": "^3.9.0",
		"@vitest/coverage-v8": "^3.1.2",
		"@vitest/ui": "^3.1.2",
		"@vscode/test-cli": "^0.0.9",
		"@vscode/test-electron": "^2.4.0",
		"chai": "^4.3.10",
		"chalk": "^5.3.0",
		"esbuild": "^0.25.0",
		"eslint": "^8.57.0",
		"husky": "^9.1.7",
		"jsdom": "^26.1.0",
		"npm-run-all": "^4.1.5",
		"prettier": "^3.3.3",
		"protoc-gen-ts": "^0.8.7",
		"proxyquire": "^2.1.3",
		"should": "^13.2.3",
		"sinon": "^19.0.2",
		"ts-node": "^10.9.2",
		"ts-proto": "^2.6.1",
		"tsconfig-paths": "^4.2.0",
		"typescript": "^5.4.5",
		"vitest": "^3.1.2"
	},
	"dependencies": {
		"@anthropic-ai/bedrock-sdk": "^0.12.4",
		"@anthropic-ai/sdk": "^0.37.0",
		"@anthropic-ai/vertex-sdk": "^0.6.4",
		"@aws-sdk/client-bedrock-runtime": "^3.758.0",
		"@bufbuild/protobuf": "^2.2.5",
		"@google-cloud/vertexai": "^1.9.3",
		"@google/genai": "^0.9.0",
		"@grpc/grpc-js": "^1.9.15",
		"@mistralai/mistralai": "^1.5.0",
		"@modelcontextprotocol/sdk": "^1.7.0",
		"@opentelemetry/api": "^1.4.1",
		"@opentelemetry/exporter-trace-otlp-http": "^0.39.1",
		"@opentelemetry/resources": "^1.30.1",
		"@opentelemetry/sdk-node": "^0.39.1",
		"@opentelemetry/sdk-trace-node": "^1.30.1",
		"@opentelemetry/semantic-conventions": "^1.30.0",
		"@sentry/browser": "^9.12.0",
		"@vscode/codicons": "^0.0.36",
		"axios": "^1.8.2",
		"cheerio": "^1.0.0",
		"chokidar": "^4.0.1",
		"chrome-launcher": "^1.1.2",
		"clone-deep": "^4.0.1",
		"default-shell": "^2.2.0",
		"diff": "^5.2.0",
		"execa": "^9.5.2",
		"fast-deep-equal": "^3.1.3",
		"firebase": "^11.2.0",
		"fzf": "^0.5.2",
		"get-folder-size": "^5.0.0",
		"globby": "^14.0.2",
		"iconv-lite": "^0.6.3",
		"ignore": "^7.0.3",
		"isbinaryfile": "^5.0.2",
		"jschardet": "^3.1.4",
		"mammoth": "^1.8.0",
		"monaco-vscode-textmate-theme-converter": "^0.1.7",
		"ollama": "^0.5.13",
		"open-graph-scraper": "^6.9.0",
		"openai": "^4.83.0",
		"os-name": "^6.0.0",
		"p-timeout": "^6.1.4",
		"p-wait-for": "^5.0.2",
		"pdf-parse": "^1.1.1",
		"posthog-node": "^4.8.1",
		"puppeteer-chromium-resolver": "^23.0.0",
		"puppeteer-core": "^23.4.0",
		"serialize-error": "^11.0.3",
		"simple-git": "^3.27.0",
		"strip-ansi": "^7.1.0",
		"tree-sitter-wasms": "^0.1.11",
		"turndown": "^7.2.0",
		"web-tree-sitter": "^0.22.6",
		"zod": "^3.24.2"
	}
}
