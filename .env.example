# Cline Development Environment Variables
# Copy this file to .env and fill in your actual values
# Values should be obtained from 1Password shared vault for development

# ============================================================================
# DEVELOPMENT FLAGS
# Recomend not changing these unless you know what you're doing they are set by the launch.json normally
# ============================================================================
# IS_DEV=true
# CLINE_ENVIRONMENT=local

# ============================================================================
# POSTHOG TELEMETRY (Existing)
# ============================================================================
# Get these values from 1Password shared vault
TELEMETRY_SERVICE_API_KEY=your-posthog-telemetry-api-key
ERROR_SERVICE_API_KEY=your-posthog-error-tracking-api-key

# ============================================================================
# TELEMETRY PROVIDER CONTROL
# ============================================================================
# Control which telemetry providers are active
POSTHOG_TELEMETRY_ENABLED=true          # Enable PostHog telemetry (default: true)
                                        # Set to false to disable Telemetry completely

# ============================================================================
# OPENTELEMETRY (Optional - for advanced telemetry)
# ============================================================================
# OpenTelemetry provides flexible telemetry collection with multiple export options
# Can run alongside PostHog or independently
# Primary focus: Logs (events), with optional metrics support

# Enable OpenTelemetry (set to 1 to enable)
# OTEL_TELEMETRY_ENABLED=1

# Exporters: "console" for local debugging, "otlp" for remote collector
# Logs are the primary signal (recommended)
# OTEL_LOGS_EXPORTER=console
# OTEL_METRICS_EXPORTER=otlp

# OTLP Protocol: "grpc", "http/json", or "http/protobuf"
# OTEL_EXPORTER_OTLP_PROTOCOL=grpc

# OTLP Endpoint (without /v1/logs or /v1/metrics path - auto-appended)
# For gRPC: use "localhost:4317" (no http:// prefix)
# For HTTP: use "http://localhost:4318"
# OTEL_EXPORTER_OTLP_ENDPOINT=localhost:4317

# OTLP Headers (for authentication, e.g., bearer tokens)
# OTEL_EXPORTER_OTLP_HEADERS=authorization=Bearer your-token-here

# Use insecure gRPC connections (for local testing only, NOT for production)
# OTEL_EXPORTER_OTLP_INSECURE=true

# Metric export interval in milliseconds (default: 60000)
# OTEL_METRIC_EXPORT_INTERVAL=10000

# Batch configuration for logs (optional)
# OTEL_LOG_BATCH_SIZE=512              # Max logs per batch (default: 512)
# OTEL_LOG_BATCH_TIMEOUT=5000          # Max wait time in ms (default: 5000)
# OTEL_LOG_MAX_QUEUE_SIZE=2048         # Max queue size (default: 2048)

# Enable detailed export diagnostics (for debugging)
# TEL_DEBUG_DIAGNOSTICS=true

# Advanced: Separate endpoints for metrics and logs (optional)
# OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=http/protobuf
# OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://metrics.example.com:4318
# OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=grpc
# OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=logs.example.com:4317

# Example configurations:
#
# Console debugging (logs only):
#   OTEL_TELEMETRY_ENABLED=1
#   OTEL_LOGS_EXPORTER=console
#   TEL_DEBUG_DIAGNOSTICS=true
#
# OTLP with gRPC (insecure, for local testing):
#   OTEL_TELEMETRY_ENABLED=1
#   OTEL_LOGS_EXPORTER=otlp
#   OTEL_EXPORTER_OTLP_PROTOCOL=grpc
#   OTEL_EXPORTER_OTLP_ENDPOINT=localhost:4317
#   OTEL_EXPORTER_OTLP_INSECURE=true
#   OTEL_EXPORTER_OTLP_HEADERS=authorization=Bearer your-token
#
# OTLP with HTTP/JSON (production):
#   OTEL_TELEMETRY_ENABLED=1
#   OTEL_LOGS_EXPORTER=otlp
#   OTEL_EXPORTER_OTLP_PROTOCOL=http/json
#   OTEL_EXPORTER_OTLP_ENDPOINT=https://otel.example.com
#   OTEL_EXPORTER_OTLP_HEADERS=authorization=Bearer your-token

# ============================================================================
# OPTIONAL DEVELOPMENT SETTINGS
# ============================================================================
# Uncomment and modify as needed for development

# Multi-root workspace debugging
# MULTI_ROOT_TRACE=true

# gRPC recorder for testing
# GRPC_RECORDER_ENABLED=true
# GRPC_RECORDER_FILE_NAME=test-recording

# Test mode
# E2E_TEST=true
# IS_TEST=true

# ============================================================================
# USAGE INSTRUCTIONS
# ============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Get PostHog keys from 1Password shared vault
# 3. Update the values in .env
# 4. The .env file is gitignored for security
