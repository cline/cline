# Cline Development Environment Variables
# Copy this file to .env and fill in your actual values
# Values should be obtained from 1Password shared vault for development

# ============================================================================
# DEVELOPMENT FLAGS
# Recomend not changing these unless you know what you're doing they are set by the launch.json normally
# ============================================================================
# IS_DEV=true
# CLINE_ENVIRONMENT=local

# ============================================================================
# POSTHOG TELEMETRY (Existing)
# ============================================================================
# Get these values from 1Password shared vault
TELEMETRY_SERVICE_API_KEY=your-posthog-telemetry-api-key
ERROR_SERVICE_API_KEY=your-posthog-error-tracking-api-key

# ============================================================================
# TELEMETRY PROVIDER CONTROL
# ============================================================================
# Control which telemetry providers are active
POSTHOG_TELEMETRY_ENABLED=true          # Enable PostHog telemetry (default: true)
                                        # Set to false to disable Telemetry completely

# ============================================================================
# OPENTELEMETRY (Optional)
# ============================================================================
# OpenTelemetry provides flexible telemetry collection with multiple export options
# Can run alongside PostHog or independently

# Enable OpenTelemetry (set to 1 to enable)
# OTEL_TELEMETRY_ENABLED=1

# Metrics Exporters (comma-separated: console, otlp, prometheus)
# OTEL_METRICS_EXPORTER=console
# OTEL_METRIC_EXPORT_INTERVAL=1000    # Export interval in milliseconds (for console/periodic)

# Logs/Events Exporters (comma-separated: console, otlp)
# OTEL_LOGS_EXPORTER=console

# OTLP Configuration (for otlp exporters)
# Protocol: grpc, http/json, or http/protobuf
# OTEL_EXPORTER_OTLP_PROTOCOL=grpc
# OTEL_EXPORTER_OTLP_ENDPOINT=localhost:4317

# Advanced: Separate endpoints for metrics and logs
# OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=http/protobuf
# OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://metrics.example.com:4318
# OTEL_EXPORTER_OTLP_LOGS_PROTOCOL=grpc
# OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://logs.example.com:4317

# Example configurations:
#
# Console debugging (1-second intervals):
#   OTEL_TELEMETRY_ENABLED=1
#   OTEL_METRICS_EXPORTER=console
#   OTEL_LOGS_EXPORTER=console
#   OTEL_METRIC_EXPORT_INTERVAL=1000
#
# OTLP with gRPC:
#   OTEL_TELEMETRY_ENABLED=1
#   OTEL_METRICS_EXPORTER=otlp
#   OTEL_LOGS_EXPORTER=otlp
#   OTEL_EXPORTER_OTLP_PROTOCOL=grpc
#   OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
#
# Multiple exporters:
#   OTEL_TELEMETRY_ENABLED=1
#   OTEL_METRICS_EXPORTER=console,otlp,prometheus
#   OTEL_LOGS_EXPORTER=console,otlp
#   OTEL_EXPORTER_OTLP_PROTOCOL=http/json
#   OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318

# ============================================================================
# OPTIONAL DEVELOPMENT SETTINGS
# ============================================================================
# Uncomment and modify as needed for development

# Multi-root workspace debugging
# MULTI_ROOT_TRACE=true

# gRPC recorder for testing
# GRPC_RECORDER_ENABLED=true
# GRPC_RECORDER_FILE_NAME=test-recording

# Test mode
# E2E_TEST=true
# IS_TEST=true

# ============================================================================
# USAGE INSTRUCTIONS
# ============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Get PostHog keys from 1Password shared vault
# 3. Update the values in .env
# 4. The .env file is gitignored for security
