name: Publish grpc-python package

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (optional, overrides pyproject)"
        required: false
        default: ""
        type: string
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Node deps
        run: npm ci

      - name: Install Python build deps and grpcio-tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine grpcio-tools

      - name: Generate Python stubs into src/generated/grpc-python
        env:
          PYTHON: python
        run: |
          npm run protos-python
          test -f src/generated/grpc-python/pyproject.toml

      - name: Optionally set version (if provided via dispatch input)
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.version != '' }}
        run: |
          python -c "import re, pathlib; p=pathlib.Path('src/generated/grpc-python/pyproject.toml'); s=p.read_text(); s=re.sub(r'(?m)^(version\\s*=\\s*\").*?(\")$', r'\\1${{ inputs.version }}\\2', s); p.write_text(s)"

      - name: Build wheel/sdist
        working-directory: src/generated/grpc-python
        run: |
          python -m build
          ls -l dist

      - name: Publish to PyPI
        working-directory: src/generated/grpc-python
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
