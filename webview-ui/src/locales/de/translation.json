{
	"announcement": {
		"newInVersion": "Neu in Version {{version}}",
		"joinOurCommunities": "Treten Sie unserem <DiscordLink>Discord</DiscordLink> oder <RedditLink>Reddit</RedditLink> für weitere Updates bei!"
	},
	"settingsView": {
		"settings": "Einstellungen",
		"done": "Fertig",
		"language": "Sprache",
		"customInstructions": "Benutzerdefinierte Anweisungen",
		"customInstructionsPlaceholder": "z.B. \"Führen Sie am Ende Unit-Tests durch\", \"Verwenden Sie TypeScript mit async/await\", \"Sprechen Sie auf Japanisch\"",
		"customInstructionsDescription": "Diese Anweisungen werden am Ende des Systemprompts hinzugefügt, der mit jeder Anfrage gesendet wird.",
		"debug": "Debuggen",
		"resetState": "Zustand zurücksetzen",
		"resetStateDescription": "Dies setzt den gesamten globalen Zustand und die geheime Speicherung in der Erweiterung zurück.",
		"feedback": "Wenn Sie Fragen oder Feedback haben, können Sie gerne ein Issue eröffnen unter"
	},
	"apiOptions": {
		"selectModel": "Modell auswählen...",
		"model": "Modell",
		"apiProvider": "API-Anbieter",
		"enterApiKey": "API-Schlüssel eingeben...",
		"apiKey": "API-Schlüssel",
		"enterBaseUrl": "Basis-URL eingeben...",
		"baseUrl": "Basis-URL",
		"optionalBaseUrl": "Basis-URL (optional)",
		"enterModelId": "Modell-ID eingeben...",
		"modelId": "Modell-ID",
		"useCustomBaseUrl": "Benutzerdefinierte Basis-URL verwenden",
		"apiKeyInfo": "Dieser Schlüssel wird lokal gespeichert und nur verwendet, um API-Anfragen von dieser Erweiterung zu stellen.",
		"getDefault": "Standard: {{defaultValue}}",
		"getApiKeyMessage": "Sie können einen {{vendor}} API-Schlüssel erhalten, indem Sie sich hier anmelden.",
		"getApiVendorKey": "{{vendor}} API-Schlüssel",
		"getCompatibleVendor": "{{vendor}} kompatibel",
		"lmStudioInfo": "LM Studio ermöglicht es Ihnen, Modelle lokal auf Ihrem Computer auszuführen. Anweisungen zum Einstieg finden Sie in ihrem <Link href=\"https://lmstudio.ai/docs\">Schnellstart-Handbuch.</Link> Sie müssen auch die <Link href=\"https://lmstudio.ai/docs/basics/server\">lokale Server</Link>-Funktion von LM Studio starten, um sie mit dieser Erweiterung zu verwenden. <ErrSpan>(<b>Hinweis:</b> Cline verwendet komplexe Prompts und funktioniert am besten mit Claude-Modellen. Weniger leistungsfähige Modelle funktionieren möglicherweise nicht wie erwartet.)</ErrSpan>",
		"ollamaInfo": "Ollama ermöglicht es Ihnen, Modelle lokal auf Ihrem Computer auszuführen. Anweisungen zum Einstieg finden Sie in ihrem <Link href=\"https://github.com/ollama/ollama/blob/main/README.md\">Schnellstart-Handbuch.</Link> <ErrorSpan>(<b>Hinweis:</b> Cline verwendet komplexe Prompts und funktioniert am besten mit Claude-Modellen. Weniger leistungsfähige Modelle funktionieren möglicherweise nicht wie erwartet.)</ErrorSpan>",
		"azureInfo": "<ErrSpan>(<b>Hinweis:</b> Cline verwendet komplexe Prompts und funktioniert am besten mit Claude-Modellen. Weniger leistungsfähige Modelle funktionieren möglicherweise nicht wie erwartet.)</ErrSpan>",
		"setAzureApiVersion": "Azure API-Version festlegen",
		"enterGcpProjectId": "Projekt-ID eingeben...",
		"gcpProjectId": "Google Cloud Projekt-ID",
		"gcpLinks": "Um Google Cloud Vertex AI zu verwenden, müssen Sie <Link href=\"https://cloud.google.com/vertex-ai/generative-ai/docs/partner-models/use-claude#before_you_begin\"> 1) ein Google Cloud-Konto erstellen › die Vertex AI API aktivieren › die gewünschten Claude-Modelle aktivieren, </Link><br /> <Link href=\"https://cloud.google.com/docs/authentication/provide-credentials-adc#google-idp\"> 2) die Google Cloud CLI installieren › Anwendungsstandardanmeldeinformationen konfigurieren. </Link>",
		"enterAwsAccessKey": "Zugangsschlüssel eingeben...",
		"awsAccessKey": "AWS Zugangsschlüssel",
		"enterAwsSecretKey": "Geheimschlüssel eingeben...",
		"awsSecretKey": "AWS Geheimschlüssel",
		"enterAwsSessionToken": "Sitzungstoken eingeben...",
		"awsSessionToken": "AWS Sitzungstoken",
		"getRegion": "{{vendor}} Region",
		"selectRegion": "Region auswählen...",
		"useCrossRegionInference": "Regionsübergreifende Inferenz verwenden",
		"awsInfo": "Authentifizieren Sie sich entweder durch die Angabe der oben genannten Schlüssel oder verwenden Sie die Standard-AWS-Anmeldeinformationen, d.h. ~/.aws/credentials oder Umgebungsvariablen. Diese Anmeldeinformationen werden nur lokal verwendet, um API-Anfragen von dieser Erweiterung zu stellen.",
		"vscodeLanguageModelsInfo": "Die VS Code Language Model API ermöglicht es Ihnen, Modelle zu verwenden, die von anderen VS Code-Erweiterungen bereitgestellt werden (einschließlich, aber nicht beschränkt auf GitHub Copilot). Der einfachste Weg, um loszulegen, ist die Installation der Copilot-Erweiterung aus dem VS Marketplace und die Aktivierung von Claude 3.5 Sonnet.",
		"experimentalFeature": "Hinweis: Dies ist eine sehr experimentelle Integration und funktioniert möglicherweise nicht wie erwartet.",
		"supportsImages": "Unterstützt Bilder",
		"doesNotSupportImages": "Unterstützt keine Bilder",
		"supportsComputerUse": "Unterstützt Computernutzung",
		"doesNotSupportComputerUse": "Unterstützt keine Computernutzung",
		"supportsPromptCache": "Unterstützt Prompt-Caching",
		"doesNotSupportPromptCache": "Unterstützt kein Prompt-Caching",
		"maxOutput": "Maximale Ausgabe",
		"tokens": "Tokens",
		"inputPrice": "Eingabepreis",
		"millionTokens": "Millionen Tokens",
		"cacheWritesPrice": "Cache-Schreibpreis",
		"cacheReadsPrice": "Cache-Lesepreis",
		"outputPrice": "Ausgabepreis",
		"geminiInfo": "* Kostenlos bis zu {{selectedModelId}} Anfragen pro Minute. Danach hängt die Abrechnung von der Prompt-Größe ab.",
		"pricingDetails": "Weitere Informationen finden Sie in den Preisdaten.",
		"languageModel": "Sprachmodell"
	},
	"welcomeView": {
		"greeting": "Hallo! Ich bin Cline, dein KI-Assistent.",
		"description": "Ich kann alle möglichen Aufgaben dank der neuesten Durchbrüche in <ClaudeLink>Claude 3.5 Sonnets agentischen Codierungsfähigkeiten</ClaudeLink> und dem Zugriff auf Werkzeuge, die es mir ermöglichen, Dateien zu erstellen und zu bearbeiten, komplexe Projekte zu erkunden, den Browser zu verwenden und Terminalbefehle auszuführen (natürlich mit deiner Erlaubnis). Ich kann sogar MCP verwenden, um neue Werkzeuge zu erstellen und meine eigenen Fähigkeiten zu erweitern.",
		"getStarted": "Um loszulegen, benötigt diese Erweiterung einen API-Anbieter für Claude 3.5 Sonnet.",
		"letsGo": "Los geht's!"
	},
	"chatView": {
		"typeMessage": "Nachricht eingeben...",
		"typeTask": "Aufgabe eingeben...",
		"whatCanIDoForYou": "Was kann ich für dich tun?",
		"thanksTo": "Dank <ClaudeLink>Claude 3.5 Sonnets agentischen Codierungsfähigkeiten</ClaudeLink> kann ich komplexe Softwareentwicklungsaufgaben Schritt für Schritt bewältigen. Mit Werkzeugen, die es mir ermöglichen, Dateien zu erstellen und zu bearbeiten, komplexe Projekte zu erkunden, den Browser zu verwenden und Terminalbefehle auszuführen (nachdem du die Erlaubnis erteilt hast), kann ich dir auf eine Weise helfen, die über die Codevervollständigung oder den technischen Support hinausgeht. Ich kann sogar MCP verwenden, um neue Werkzeuge zu erstellen und meine eigenen Fähigkeiten zu erweitern."
	},
	"chatTextArea": {
		"plan": "Planen",
		"act": "Handeln"
	},
	"chatRow": {
		"error": "Fehler",
		"mistakeLimitReached": "Fehlergrenze erreicht",
		"autoApprovalMaxReqReached": "Maximale Anzahl automatischer Genehmigungen erreicht",
		"command": {
			"ask": "Cline möchte diesen Befehl ausführen:",
			"say": "Cline hat diesen Befehl ausgeführt:"
		},
		"useMcpServer": {
			"ask": "Cline möchte dieses {type} auf {serverName} verwenden:",
			"say": "Cline hat dieses {type} auf {serverName} verwendet:",
			"tool": "Werkzeug",
			"resource": "Ressource"
		},
		"completionResult": "Abschlussergebnis",
		"apiReqCancelled": "API-Anfrage abgebrochen",
		"apiStreamingFailed": "API-Streaming fehlgeschlagen",
		"apiRequest": "API-Anfrage",
		"apiRequestFailed": "API-Anfrage fehlgeschlagen",
		"apiRequestInProgress": "API-Anfrage in Bearbeitung",
		"followup": "Nachverfolgung",
		"tool": {
			"editedExistingFile": {
				"ask": "Cline möchte diese Datei bearbeiten:",
				"say": "Cline bearbeitet diese Datei:"
			},
			"createdNewFile": {
				"ask": "Cline möchte diese Datei erstellen:",
				"say": "Cline hat diese Datei erstellt:"
			},
			"readExistingFile": {
				"ask": "Cline möchte diese Datei lesen:",
				"say": "Cline hat diese Datei gelesen:"
			}
		},
		"apiReqStarted": "API-Anfrage gestartet",
		"userFeedback": "Benutzer-Feedback",
		"userFeedbackDiff": "Benutzer-Feedback-Diff",
		"diffEditFailed": "Diff-Bearbeitung fehlgeschlagen",
		"shellIntegrationUnavailable": "Shell-Integration nicht verfügbar",
		"mcpServerResponse": "MCP-Server-Antwort",
		"planModeResponse": "Planmodus-Antwort",
		"seeNewChanges": "Neue Änderungen anzeigen",
		"commandRequiresApproval": "Das Modell hat bestimmt, dass dieser Befehl eine ausdrückliche Genehmigung erfordert.",
		"troubleshootingGuide": "Es scheint, dass Sie Probleme mit Windows PowerShell haben. Bitte sehen Sie sich diesen <Link>Fehlerbehebungsleitfaden</Link> an.",
		"clineWantsToViewTopLevelFiles": "Cline möchte die obersten Dateien in diesem Verzeichnis anzeigen:",
		"clineViewedTopLevelFiles": "Cline hat die obersten Dateien in diesem Verzeichnis angezeigt:",
		"clineWantsToRecursivelyViewFiles": "Cline möchte alle Dateien in diesem Verzeichnis rekursiv anzeigen:",
		"clineRecursivelyViewedFiles": "Cline hat alle Dateien in diesem Verzeichnis rekursiv angezeigt:",
		"clineWantsToViewSourceCodeDefinitions": "Cline möchte die in diesem Verzeichnis verwendeten Quellcode-Definitionsnamen anzeigen:",
		"clineViewedSourceCodeDefinitions": "Cline hat die in diesem Verzeichnis verwendeten Quellcode-Definitionsnamen angezeigt:",
		"clineWantsToSearchDirectory": "Cline möchte dieses Verzeichnis nach {{regex}} durchsuchen:",
		"clineSearchedDirectory": "Cline hat dieses Verzeichnis nach {{regex}} durchsucht:",
		"diffEditFailedMessage": "Dies passiert normalerweise, wenn das Modell Suchmuster verwendet, die nichts in der Datei finden. Erneut versuchen...",
		"shellIntegrationUnavailableMessage": "Cline kann die Ausgabe des Befehls nicht anzeigen. Bitte aktualisiere VSCode (CMD/CTRL + Shift + P → \"Update\") und stelle sicher, dass du eine unterstützte Shell verwendest: zsh, bash, fish oder PowerShell (CMD/CTRL + Shift + P → \"Terminal: Standardprofil auswählen\"). Immer noch Probleme?",
		"response": "Antwort",
		"stillHavingTrouble": "Immer noch Probleme?"
	},
	"autoApproveMenu": {
		"none": "Keine",
		"autoApprove": "Automatische Genehmigung:",
		"autoApproveDescription": "Die automatische Genehmigung ermöglicht es Cline, die folgenden Aktionen ohne Erlaubnis auszuführen. Bitte mit Vorsicht verwenden und nur aktivieren, wenn Sie die Risiken verstehen.",
		"autoApproveMaxRequestsDescription": "Cline wird automatisch so viele API-Anfragen stellen, bevor eine Genehmigung zur Fortsetzung der Aufgabe erforderlich ist.",
		"enableNotifications": "Benachrichtigungen aktivieren",
		"enableNotificationsDescription": "Erhalte Systembenachrichtigungen, wenn Cline eine Genehmigung zur Fortsetzung benötigt oder wenn eine Aufgabe abgeschlossen ist."
	},
	"historyPreview": {
		"recentTasks": "Kürzliche Aufgaben",
		"tokens": "Tokens",
		"cache": "Cache",
		"apiCost": "API-Kosten",
		"viewAllHistory": "Alle Verlauf anzeigen"
	},
	"historyView": {
		"history": "Verlauf",
		"done": "Fertig",
		"fuzzySearchHistory": "Verlauf unscharf durchsuchen...",
		"newest": "Neueste",
		"oldest": "Älteste",
		"mostExpensive": "Teuerste",
		"mostTokens": "Meiste Tokens",
		"mostRelevant": "Relevanteste",
		"tokens": "Tokens:",
		"cache": "Cache:",
		"apiCost": "API-Kosten:",
		"export": "EXPORTIEREN"
	}
}
