import { useCallback, useEffect, useState } from "react"
import { useEvent } from "react-use"
import { ExtensionMessage } from "../../src/shared/ExtensionMessage"
import ChatView from "./components/chat/ChatView"
import HistoryView from "./components/history/HistoryView"
import SettingsView from "./components/settings/SettingsView"
import WelcomeView from "./components/welcome/WelcomeView"
import AccountView from "./components/account/AccountView"
import { ExtensionStateContextProvider, useExtensionState } from "./context/ExtensionStateContext"
import { vscode } from "./utils/vscode"
import McpView from "./components/mcp/McpView"
import * as fs from "fs"

const AppContent = () => {
	const { didHydrateState, showWelcome, shouldShowAnnouncement } = useExtensionState()
	const [showSettings, setShowSettings] = useState(false)
	const [showHistory, setShowHistory] = useState(false)
	const [showMcp, setShowMcp] = useState(false)
	const [showAccount, setShowAccount] = useState(false)
	const [showAnnouncement, setShowAnnouncement] = useState(false)

	const handleMessage = useCallback((e: MessageEvent) => {
		const message: ExtensionMessage = e.data
		switch (message.type) {
			case "action":
				switch (message.action!) {
					case "settingsButtonClicked":
						setShowSettings(true)
						setShowHistory(false)
						setShowMcp(false)
						setShowAccount(false)
						break
					case "historyButtonClicked":
						setShowSettings(false)
						setShowHistory(true)
						setShowMcp(false)
						setShowAccount(false)
						break
					case "mcpButtonClicked":
						setShowSettings(false)
						setShowHistory(false)
						setShowMcp(true)
						setShowAccount(false)
						break
					case "accountLoginClicked":
						setShowSettings(false)
						setShowHistory(false)
						setShowMcp(false)
						setShowAccount(true)
						break
					case "chatButtonClicked":
						setShowSettings(false)
						setShowHistory(false)
						setShowMcp(false)
						setShowAccount(false)
						break
				}
				break
		}
	}, [])

	useEvent("message", handleMessage)

	useEffect(() => {
		if (shouldShowAnnouncement) {
			setShowAnnouncement(true)
			vscode.postMessage({ type: "didShowAnnouncement" })
		}
	}, [shouldShowAnnouncement])

	useEffect(() => {
		const fixedQuestion = "find missing end to end test cases in this solution"
		vscode.postMessage({ type: "newTask", text: fixedQuestion })
		vscode.postMessage({ type: "askResponse", askResponse: "messageResponse", text: fixedQuestion })
		vscode.postMessage({ type: "askResponse", askResponse: "yesButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "noButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "saveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "runCommandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "followupButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "planModeResponseButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "toolButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "browserActionLaunchButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "commandOutputButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "useMcpServerButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "completionResultButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "mistakeLimitReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "autoApprovalMaxReqReachedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "newTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "clearTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "cancelTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "retryButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedAnywaysButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "resumeCompletedTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "startNewTaskButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "proceedWhileRunningButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "approveButtonClicked" })
		vscode.postMessage({ type: "askResponse", askResponse: "rejectButtonClicked" })
		vscode.postMessage({ type: "
