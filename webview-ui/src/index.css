@layer theme, base, components, utilities;
@import "tailwindcss/theme.css" layer(theme);
/* Disable Tailwind's CSS reset to preserve existing styles */
/* @import "tailwindcss/preflight.css" layer(base); */
@import "tailwindcss/utilities.css" layer(utilities);

textarea:focus {
	outline: 1.5px solid var(--vscode-focusBorder, #007fd4);
}

vscode-button::part(control):focus {
	outline: none;
}

/*
Use vscode native scrollbar styles
https://github.com/gitkraken/vscode-gitlens/blob/b1d71d4844523e8b2ef16f9e007068e91f46fd88/src/webviews/apps/home/home.scss
*/

html {
	height: 100%;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

body {
	margin: 0;
	line-height: 1.25;
}

body.scrollable,
.scrollable,
body.code-block-scrollable,
.code-block-scrollable {
	border-color: transparent;
	transition: border-color 0.7s linear;
}

body:hover.scrollable,
body:hover .scrollable,
body:focus-within.scrollable,
body:focus-within .scrollable,
body:hover.code-block-scrollable,
body:hover .code-block-scrollable,
body:focus-within.code-block-scrollable,
body:focus-within .code-block-scrollable {
	border-color: var(--vscode-scrollbarSlider-background);
	transition: none;
}

.scrollable::-webkit-scrollbar-corner {
	background-color: transparent !important;
}

.scrollable::-webkit-scrollbar-thumb {
	background-color: transparent;
	border-color: inherit;
	border-right-style: inset;
	border-right-width: calc(100vw + 100vh);
	border-radius: unset !important;
}

.scrollable::-webkit-scrollbar-thumb:hover {
	border-color: var(--vscode-scrollbarSlider-hoverBackground);
}

.scrollable::-webkit-scrollbar-thumb:active {
	border-color: var(--vscode-scrollbarSlider-activeBackground);
}

/*
Fix VSCode ignoring webkit scrollbar modifiers
https://github.com/microsoft/vscode/issues/213045
*/
@supports selector(::-webkit-scrollbar) {
	html {
		scrollbar-color: unset;
	}
}

/*
The above scrollbar styling uses some transparent background color magic to accomplish its animation. However this doesn't play nicely with SyntaxHighlighter, so we need to set a background color for the code blocks' horizontal scrollbar. This actually has the unintended consequence of always showing the scrollbar which I prefer since it makes it more obvious that there is more content to scroll to.
*/

.code-block-scrollable::-webkit-scrollbar-track {
	background: transparent;
}

.code-block-scrollable::-webkit-scrollbar-thumb {
	background-color: var(--vscode-scrollbarSlider-background);
	border-radius: 5px;
	border: 2px solid transparent;
	background-clip: content-box;
}

.code-block-scrollable::-webkit-scrollbar-thumb:hover {
	background-color: var(--vscode-scrollbarSlider-hoverBackground);
}

.code-block-scrollable::-webkit-scrollbar-thumb:active {
	background-color: var(--vscode-scrollbarSlider-activeBackground);
}

.code-block-scrollable::-webkit-scrollbar-corner {
	background-color: transparent;
}

/*
Dropdown label
https://github.com/microsoft/vscode-webview-ui-toolkit/tree/main/src/dropdown#with-label
*/
.dropdown-container {
	box-sizing: border-box;
	display: flex;
	flex-flow: column nowrap;
	align-items: flex-start;
	justify-content: flex-start;
}
.dropdown-container label {
	display: block;
	color: var(--vscode-foreground);
	cursor: pointer;
	font-size: var(--vscode-font-size);
	line-height: normal;
	margin-bottom: 2px;
}

/* Fix scrollbar in dropdown */

vscode-dropdown::part(listbox) {
	border-color: var(--vscode-scrollbarSlider-background);
	transition: none;
	scrollbar-color: var(--vscode-scrollbarSlider-background) transparent;
}

/* Faded icon buttons in textfields */

.input-icon-button {
	cursor: pointer;
	opacity: 0.65;
}
.input-icon-button:hover {
	opacity: 1;
}
.input-icon-button.disabled {
	cursor: not-allowed;
	opacity: 0.4;
}
.input-icon-button.disabled:hover {
	opacity: 0.4;
}

/* Context mentions */

.mention-context-textarea-highlight {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	border-radius: 3px;
	box-shadow: 0 0 0 0.5px color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	color: transparent;
	/* padding: 0.5px;
	margin: -0.5px;
	position: relative;
	bottom: -0.5px; */
}

.mention-context-highlight {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	border-radius: 3px;
}

.mention-context-highlight-with-shadow {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
	border-radius: 3px;
	box-shadow: 0 0 0 0.5px color-mix(in srgb, var(--vscode-badge-foreground) 30%, transparent);
}

/* Active Conversation Selector styles */
.dev-conversation-selector {
	margin-left: 10px;
	padding: 2px 8px;
	border-radius: 500px;
	font-size: 11px;
	font-weight: 500;
	display: flex;
	align-items: center;
	gap: 4px;
	cursor: pointer;
	flex-shrink: 0;
	position: relative;
}

.dev-conversation-selector.none {
	background-color: color-mix(in srgb, var(--vscode-badge-foreground) 40%, transparent);
	color: var(--vscode-badge-foreground);
}

.dev-conversation-selector.dev-a {
	background-color: #22c55e;
	color: var(--vscode-badge-background);
}

.dev-conversation-selector.dev-b {
	background-color: #3b82f6;
	color: var(--vscode-badge-background);
}

.dev-conversation-selector.dev-c {
	background-color: #f59e0b;
	color: var(--vscode-badge-background);
}

.dev-conversation-selector.dev-d {
	background-color: #ec4899;
	color: var(--vscode-badge-background);
}

.dev-conversation-icon {
	display: inline-flex;
	align-items: center;
}

.dev-selector-dropdown {
	position: absolute;
	top: 100%;
	left: 0;
	margin-top: 4px;
	background-color: var(--vscode-dropdown-background);
	border: 1px solid var(--vscode-dropdown-border);
	border-radius: 3px;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
	z-index: 10;
	overflow: hidden;
	width: 100%; /* Make dropdown the same width as the button */
	min-width: 100px; /* Ensure minimum width */
}

.dev-selector-option {
	padding: 6px 12px;
	white-space: nowrap;
	cursor: pointer;
}

.dev-selector-option:hover {
	background-color: var(--vscode-list-hoverBackground);
}

.dev-selector-option.dev-a {
	color: #22c55e;
}

.dev-selector-option.dev-b {
	color: #3b82f6;
}

.dev-selector-option.dev-c {
	color: #f59e0b;
}

.dev-selector-option.dev-d {
	color: #ec4899;
}

.dev-selector-option {
	display: flex;
	align-items: center;
	gap: 6px;
}

/* Status icon styles */
.status-icon {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	margin-right: 6px;
	flex-shrink: 0;
	font-size: 14px;
}

.status-icon.in-use {
	color: var(--vscode-notificationsErrorIcon-foreground); /* Red color for in-use */
}

.status-icon.available {
	color: #22c55e; /* Green color for available */
}

.status-icon.current {
	color: #22c55e; /* Green color for checkmark */
	font-weight: bold;
	font-size: 16px;
}

/* Dev option content layout */
.dev-option-content {
	display: flex;
	align-items: center;
	width: 100%;
	gap: 6px;
}

/* Info icon */
.info-icon {
	margin-left: auto;
	font-size: 12px;
	opacity: 0.7;
}

.info-icon:hover {
	opacity: 1;
}

/* Confirmation dialog */
.confirmation-dialog {
	position: absolute;
	top: 100%;
	left: 0;
	margin-top: 4px;
	background-color: var(--vscode-editorWidget-background);
	border: 1px solid var(--vscode-dropdown-border);
	border-radius: 3px;
	box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
	z-index: 20;
	width: 250px;
	padding: 12px;
}

.confirmation-content {
	display: flex;
	flex-direction: column;
	gap: 8px;
}

.confirmation-buttons {
	display: flex;
	justify-content: flex-end;
	gap: 8px;
	margin-top: 8px;
}
