echo "Running pre-commit checks..."

# Run ESLint
echo "Running ESLint..."
npm run lint || {
    echo "❌ ESLint check failed. Please fix the errors and try committing again."
    exit 1
}

# Run Prettier
echo "Running Prettier..."
npm run format || {
    echo "❌ Prettier check failed. Run 'npm run format:fix' to automatically fix formatting issues."
    exit 1
}

echo "✅ All checks passed!"

# Exclude package-lock files
echo "Excluding Package-lock Files"

# Define the list of package-lock files to check and potentially unstage
PACKAGE_LOCK_FILES=(
    "package-lock.json"
    "webview-ui/package-lock.json"
)

# Loop through each file path
for file_path in "${PACKAGE_LOCK_FILES[@]}"; do
    # Check if the file is currently staged using git diff and grep
    # The -q flag makes grep quiet (no output), it just sets the exit status
    # The ^...$ ensures we match the exact filename
    if git diff --name-only --cached | grep -q "^${file_path}$"; then
        # If the file was found in the staged changes, unstage it
        # The '&&' ensures the echo only happens if 'git restore' succeeds
        git restore --staged "$file_path" && echo "Removed $file_path from commit"
    fi
    # No '|| true' needed here; the 'if' statement handles the case where
    # the file isn't staged, and the loop simply continues.
done

echo "Finished checking package-lock files."
